/*Query1 - query used for first insight*/
SELECT f.title AS film_title,
		c.name AS category_name,
        COUNT(r.rental_id) AS rental_count 
FROM category c
JOIN film_category fc
ON c.category_id = fc.category_id
JOIN film f
ON fc.film_id = f.film_id
JOIN inventory i
ON f.film_id = i.film_id
JOIN rental r
ON i.inventory_id = r.inventory_id
WHERE c.name IN ('Animation', 'Children', 
				'Classics', 'Comedy', 'Family', 
				'Music') 
GROUP BY 1,2
HAVING COUNT(r.rental_id) > 30
ORDER BY 2,1;

/*Query2 - query used for second insight*/
SELECT f.title, 
		c.name, 
        f.rental_duration,
        NTILE(4) OVER(PARTITION BY f.rental_duration) AS standard_quartile
FROM category c
JOIN film_category fc
ON c.category_id = fc.category_id
JOIN film f
ON fc.film_id = f.film_id
WHERE c.name IN ('Animation', 'Children', 
				'Classics', 'Comedy', 'Family', 
				'Music') 
ORDER BY 3;

/*Query3 - query used for third insight*/
WITH table1 AS (
SELECT f.title, 
		c.name, 
        f.rental_duration,
        NTILE(4) OVER(ORDER BY f.rental_duration) AS standard_quartile
FROM category c
JOIN film_category fc
ON c.category_id = fc.category_id
JOIN film f
ON fc.film_id = f.film_id
WHERE c.name IN ('Animation', 'Children', 
				'Classics', 'Comedy', 'Family', 
				'Music'))
SELECT table1.name, 
       table1.standard_quartile,
       COUNT(table1.standard_quartile)
FROM table1
GROUP BY 1,2
ORDER BY 1,2;

/*Query4 - query used for fourth insight*/
SELECT DATE_TRUNC('month', p.payment_date) AS pay_month, 
		CONCAT(c.first_name, ' ', c.last_name) AS fullname, 
		COUNT(p.amount) AS pay_countpermon, 
		SUM(p.amount) AS pay_amount
FROM customer c
JOIN payment p
ON p.customer_id = c.customer_id
WHERE CONCAT(c.first_name, ' ', c.last_name) IN
(SELECT t1.full_name
FROM
(SELECT CONCAT(c.first_name, ' ', c.last_name) AS full_name, 
		SUM(p.amount) as amount_total
FROM customer c
JOIN payment p
ON p.customer_id = c.customer_id
GROUP BY 1	
ORDER BY 2 DESC
LIMIT 10) t1) AND (p.payment_date BETWEEN '2007-01-01' AND '2008-01-01')
GROUP BY 2, 1
ORDER BY 4 DESC;

